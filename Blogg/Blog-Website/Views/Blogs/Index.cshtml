@using Microsoft.AspNetCore.Identity;
@inject SignInManager<IdentityUser> signInManager;
@inject UserManager<IdentityUser> userManager;

@model Blog_Website.Models.ViewModels.BlogDetailsVM

@{
    // ViewData["Title"] = Model.PageTitle;
}
<div class="container my-5">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-6"

        @if (Model != null)
        {
            <h1 >@Model.Heading</h1>
                <div class="d-flex justify-content-between mb-3">
                          <span class="text-secondary">@Model.Author</span>
                              <span class="text-secondary">@Model.PublishedDate.ToShortDateString()</span>
                    </div>
                      <div class="mb-3" d-flex>
                            @if (signInManager.IsSignedIn(User))
                             {
                              <a id="btnLike" style="cursor : pointer;">
                                  <i class="bi bi-hand-thumbs-up"></i>
                               </a>
                          
                }
                <span id="totalLikes">@Model.TotalLikes</span>  Likes

                        </div>
                    <div class="mb-3 d-flex">
                           @foreach (var tag in Model.Tags)
                            {
                            <span class="badge text-light bg-info ">@tag.Name</span>
                        }
                        </div>
                              <img src = "@Model.FeaturedImageUrl" class="d-block img-fluid mb-3 " />
                          <div class="mb-3 p-4 blog-details-content">
                              @Html.Raw(Model.PageContent)

                              </div>
        }
        else
        {
            <p>Blog post not found</p>
        }

    </div>

</div>

@section Scripts{
       <script>
            const btnLikeElement = document.getElementById('btnLike');
            const totalLikesElement = document.getElementById('totalLikes');

           async function getTotalLikes() {
                fetch('/api/blogPostLike/@Model.Id/totalLikes',{

                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json',
                        'Accept': '*/*'
                    }                  
                    })

                    .then(data => data.json())
                    .then(result => {
                        totalLikesElement.innerHTML = result;
                    });
            }

           async function addLikeForBlog() {
               fetch('/api/BlogPostLike/Add', {
                   method: 'POST',
                   headers: {
                       'Content-Type': 'application/json',
                       'Accept': '*/*'
                   },
                   body: JSON.stringify({
                       blogPostId: '@Model.Id',
                       userId: '@userManager.GetUserId(User)'
                   })

               }).then(() => {
                   btnLikeElement.innerHTML = '<i class="bi bi-hand-thumbs-up-fill"></i>';
                   btnLikeElement.removeEventListener('click', addLikeForBlog);
                   getTotalLikes();
               });
              

           }

           btnLikeElement.addEventListener("click", addLikeForBlog);
       </script>
}